name: Cleanup PR Preview

on:
  repository_dispatch:
    types: [pr-preview-cleanup]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  cleanup:
    name: Remove PR Preview
    runs-on: ubuntu-latest
    
    steps:
      - name: Set variables
        run: |
          REPO_NAME=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          PR_NUM="${{ github.event.client_payload.pr_number }}"
          echo "Repository: $REPO_NAME"
          echo "PR Number: $PR_NUM"
          echo "Preview path would be: /${REPO_NAME}/pr-${PR_NUM}/"
      
      - name: Check current GitHub Pages status
        run: |
          echo "Checking if GitHub Pages is active..."
          PAGES_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pages" || echo "{}")
          
          PAGES_URL=$(echo "$PAGES_INFO" | jq -r '.html_url // "Not deployed"')
          echo "Current GitHub Pages URL: $PAGES_URL"
          
          if [ "$PAGES_URL" != "Not deployed" ]; then
            PREVIEW_URL="${PAGES_URL}${REPO_NAME}/pr-${PR_NUM}/"
            echo "Preview URL was: $PREVIEW_URL"
            
            # Testa se ainda existe
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PREVIEW_URL" 2>/dev/null || echo "000")
            echo "Preview URL status: $STATUS"
            
            if [ "$STATUS" = "200" ]; then
              echo "‚ö† Preview ainda est√° ativo. Ser√° removido no pr√≥ximo deploy."
            else
              echo "‚úì Preview j√° n√£o est√° acess√≠vel."
            fi
          else
            echo "‚Ñπ No GitHub Pages deployment found."
          fi
      
      - name: Comment on PR about cleanup intent
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.client_payload.artifact_repo }}/issues/${{ github.event.client_payload.pr_number }}/comments \
            -d '{"body":"üßπ Preview cleanup executado. O preview ser√° removido no pr√≥ximo deploy de preview."}'
      
      - name: Cleanup complete
        run: |
          echo "‚úÖ Cleanup workflow completed"
          echo "üí° Note: The actual preview removal happens during the next deploy"
          echo "üí° This prevents issues with missing artifacts and maintains existing previews"