name: Cleanup PR Preview

on:
  repository_dispatch:
    types: [pr-preview-cleanup]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  cleanup:
    name: Remove PR Preview
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      # Baixa o artifact atual do GitHub Pages (Ãºltimo deployment)
      - name: Download current GitHub Pages
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./public
        continue-on-error: true
      
      # Se nÃ£o encontrou o artifact principal, tenta os artifacts especÃ­ficos de PR
      - name: List available artifacts for debugging
        if: failure()
        run: |
          echo "Failed to download main github-pages artifact"
          echo "This might be expected if using PR-specific artifacts"
          mkdir -p ./public
      
      - name: Remove PR preview folder
        run: |
          REPO_NAME=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          PR_NUM="${{ github.event.client_payload.pr_number }}"
          TARGET_DIR="./public/$REPO_NAME/pr-$PR_NUM"
          
          echo "Repository: $REPO_NAME"
          echo "PR Number: $PR_NUM"
          echo "Target directory: $TARGET_DIR"
          
          # Debug: lista estrutura atual
          echo "=== Current structure ==="
          find ./public -type d 2>/dev/null | head -20 || echo "No directories found"
          
          # Remove a pasta do PR
          if [ -d "$TARGET_DIR" ]; then
            echo "âœ“ Found and removing: $TARGET_DIR"
            rm -rf "$TARGET_DIR"
            echo "âœ“ Successfully removed $TARGET_DIR"
          else
            echo "âš  Folder $TARGET_DIR does not exist"
          fi
          
          # Remove pasta do repositÃ³rio se estiver vazia
          REPO_DIR="./public/$REPO_NAME"
          if [ -d "$REPO_DIR" ] && [ -z "$(ls -A "$REPO_DIR" 2>/dev/null)" ]; then
            echo "âœ“ Removing empty repository folder: $REPO_DIR"
            rmdir "$REPO_DIR"
          fi
          
          # Debug: lista estrutura final
          echo "=== Final structure ==="
          find ./public -type d 2>/dev/null | head -20 || echo "No directories found"
      
      - name: Upload updated GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          name: github-pages
          retention-days: 30
      
      - name: Deploy updated pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
      
      - name: Comment on PR about cleanup
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.client_payload.artifact_repo }}/issues/${{ github.event.client_payload.pr_number }}/comments \
            -d '{"body":"ðŸ§¹ Preview removido com sucesso!"}'