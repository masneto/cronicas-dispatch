name: Deploy Docs Preview

on:
  repository_dispatch:
    types: [pr-preview]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    name: Deploy Docs Preview
    runs-on: ubuntu-latest
    environment:
      name: github-pages    
    steps:
      - name: Checkout repo B
        uses: actions/checkout@v4

      # NOVO: Baixa o conteÃºdo atual do GitHub Pages para preservar outros previews
      - name: Download current GitHub Pages content
        run: |
          PAGES_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "Downloading existing content from: $PAGES_URL"
          
          mkdir -p ./public
          
          # Tenta baixar conteÃºdo existente
          wget --mirror \
               --no-parent \
               --no-host-directories \
               --cut-dirs=1 \
               --directory-prefix=./public \
               --no-check-certificate \
               --user-agent="GitHub-Actions-Deploy" \
               --quiet \
               "$PAGES_URL/" || echo "No existing content found (normal for first deployment)"
          
          echo "=== Existing content structure ==="
          find ./public -type d 2>/dev/null | sort | head -20 || echo "No existing directories"
          
          echo "=== Existing previews found ==="
          find ./public -type d -name "pr-*" 2>/dev/null | sort || echo "No existing previews"

      - name: Download artifact from repo A
        uses: actions/download-artifact@v4
        with:
          name: pr-${{ github.event.client_payload.pr_number }}
          path: ./site
          repository: ${{ github.event.client_payload.artifact_repo }}
          run-id: ${{ github.event.client_payload.artifact_run_id }}
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}

      - name: Add new PR preview to existing content
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          target_dir="./public/$repo_name/pr-${{ github.event.client_payload.pr_number }}"
          
          echo "ðŸš€ Adding new preview to: $target_dir"
          
          # Remove preview anterior desta PR se existir
          if [ -d "$target_dir" ]; then
            echo "Replacing existing preview at: $target_dir"
            rm -rf "$target_dir"
          fi
          
          # Cria o novo preview
          mkdir -p "$target_dir"
          cp -r ./site/* "$target_dir/"
          
          echo "=== Final structure with all previews ==="
          find ./public -type d | sort | head -20
          
          echo "=== All active previews ==="
          find ./public -type d -name "pr-*" | sort

      # ALTERADO: Usa sempre o mesmo nome de artifact para manter um deployment Ãºnico
      - name: Upload consolidated github-pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          retention-days: 1
          name: github-pages

      - name: Configure Pages
        uses: actions/configure-pages@v5

      # ALTERADO: Deploy do artifact consolidado
      - name: Deploy Pages with all previews
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
      
      - name: Comment on PR with preview URL
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          preview_url="${{ steps.deployment.outputs.page_url }}$repo_name/pr-${{ github.event.client_payload.pr_number }}/"
          
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.client_payload.artifact_repo }}/issues/${{ github.event.client_payload.pr_number }}/comments \
            -d "{\"body\":\"ðŸš€ Preview disponÃ­vel: $preview_url\"}"