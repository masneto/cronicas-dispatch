name: Deploy Docs Preview

on:
  repository_dispatch:
    types: [pr-preview]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    name: Deploy Docs Preview
    runs-on: ubuntu-latest
    environment:
      name: github-pages    
    steps:
      - name: Checkout repo B
        uses: actions/checkout@v4

      # Se nÃ£o existir, cria estrutura vazia
      - name: Initialize public directory
        run: |
          if [ ! -d "./public" ]; then
            mkdir -p ./public
            echo "Created empty public directory"
          fi

      - name: Download artifact from repo A
        uses: actions/download-artifact@v4
        with:
          name: pr-${{ github.event.client_payload.pr_number }}
          path: ./site
          repository: ${{ github.event.client_payload.artifact_repo }}
          run-id: ${{ github.event.client_payload.artifact_run_id }}
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}

      - name: Move site to PR subdir
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          target_dir="./public/$repo_name/pr-${{ github.event.client_payload.pr_number }}"
          
          echo "Creating directory: $target_dir"
          mkdir -p "$target_dir"
          cp -r ./site/* "$target_dir/"
          
          echo "=== Final structure ==="
          find ./public -type d | head -10

      - name: Upload github-pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          retention-days: 1
          name: pr-${{ github.event.client_payload.pr_number }}

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Deploy Pages Preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: pr-${{ github.event.client_payload.pr_number }}
          preview: true
      
      - name: Comment on PR in repo de origem
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          preview_url="${{ steps.deployment.outputs.page_url }}$repo_name/pr-${{ github.event.client_payload.pr_number }}/"
          
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.client_payload.artifact_repo }}/issues/${{ github.event.client_payload.pr_number }}/comments \
            -d "{\"body\":\"ðŸš€ Preview disponÃ­vel: $preview_url\"}"