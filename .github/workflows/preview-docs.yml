name: Deploy Docs Preview

on:
  repository_dispatch:
    types: [pr-preview]

permissions:
  contents: write
  pages: write
  id-token: write

# Garante que apenas um deployment execute por vez
concurrency:
  group: github-pages-deploy
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy Docs Preview
    runs-on: ubuntu-latest
    environment:
      name: github-pages    
    steps:
      - name: Checkout repo B
        uses: actions/checkout@v4

      # NOVO: Baixa o artifact atual para preservar outros previews
      - name: Download current GitHub Pages content
        run: |
          echo "üîÑ Attempting to preserve existing previews..."
          
          mkdir -p ./public
          
          # Tenta baixar o artifact github-pages atual
          echo "üì¶ Trying to download existing github-pages artifact..."
          
          if wget --header="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  --header="Accept: application/vnd.github+json" \
                  --quiet \
                  --output-document=current-artifact.zip \
                  "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" 2>/dev/null; then
            echo "‚úÖ Downloaded artifacts list"
          else
            echo "‚Ñπ No artifacts API access or no artifacts found"
          fi
          
          # M√©todo alternativo: tentar download direto do √∫ltimo deployment
          echo "üîÑ Trying alternative: download from deployed site..."
          
          # Lista o que tem no site atual (se algo)
          SITE_CHECK=$(curl -s -I "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" | head -1)
          echo "Site status: $SITE_CHECK"
          
          if echo "$SITE_CHECK" | grep -q "200 OK"; then
            # Se retorna 200, tenta baixar via recursive com foco em diret√≥rios pr-*
            echo "üì• Site is accessible, downloading existing previews..."
            
            BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
            
            # Estrat√©gia: tentar baixar estruturas conhecidas baseado no padr√£o dos PRs
            # Como sabemos que os previews ficam em /$repo_name/pr-$number/
            
            # Lista poss√≠veis reposit√≥rios e PRs (n√∫meros comuns)
            for repo in $(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2); do
              for pr in {1..20}; do  # tenta PRs 1-20 (ajuste conforme necess√°rio)
                PR_URL="$BASE_URL/$repo/pr-$pr/"
                PR_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$PR_URL" 2>/dev/null || echo "000")
                
                if [ "$PR_STATUS" = "200" ]; then
                  echo "‚úÖ Found existing preview: $repo/pr-$pr"
                  
                  # Baixa este preview espec√≠fico
                  mkdir -p "./public/$repo/pr-$pr"
                  wget --recursive \
                       --level=2 \
                       --no-parent \
                       --no-host-directories \
                       --cut-dirs=3 \
                       --directory-prefix="./public/$repo/pr-$pr" \
                       --quiet \
                       --tries=1 \
                       --timeout=10 \
                       "$PR_URL" || echo "Failed to download $repo/pr-$pr"
                fi
              done
            done
          else
            echo "‚Ñπ No accessible site found - fresh deployment"
          fi
          
          echo "=== Content status ==="
          TOTAL_FILES=$(find ./public -type f 2>/dev/null | wc -l)
          echo "Total files preserved: $TOTAL_FILES"
          
          if [ "$TOTAL_FILES" -gt 0 ]; then
            echo "‚úÖ Existing content preserved:"
            find ./public -type d -name "pr-*" 2>/dev/null | sort || echo "No existing previews"
          else
            echo "üìù No existing content found - fresh start"
          fi

      - name: Download artifact from repo A
        uses: actions/download-artifact@v4
        with:
          name: pr-${{ github.event.client_payload.pr_number }}
          path: ./site
          repository: ${{ github.event.client_payload.artifact_repo }}
          run-id: ${{ github.event.client_payload.artifact_run_id }}
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}

      - name: Add new PR preview to existing content
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          target_dir="./public/$repo_name/pr-${{ github.event.client_payload.pr_number }}"
          
          echo "üöÄ Adding new preview to: $target_dir"
          
          # Remove preview anterior desta PR se existir
          if [ -d "$target_dir" ]; then
            echo "Replacing existing preview at: $target_dir"
            rm -rf "$target_dir"
          fi
          
          # Cria o novo preview
          mkdir -p "$target_dir"
          cp -r ./site/* "$target_dir/"
          
          echo "=== Final structure with all previews ==="
          find ./public -type d | sort | head -20
          
          echo "=== All active previews ==="
          find ./public -type d -name "pr-*" | sort

      # ALTERADO: Usa sempre o mesmo nome de artifact para manter um deployment √∫nico
      - name: Upload consolidated github-pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
          retention-days: 1
          name: github-pages

      - name: Configure Pages
        uses: actions/configure-pages@v5

      # ALTERADO: Deploy do artifact consolidado
      - name: Deploy Pages with all previews
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
      
      - name: Comment on PR with preview URL
        run: |
          repo_name=$(echo "${{ github.event.client_payload.artifact_repo }}" | cut -d'/' -f2)
          preview_url="${{ steps.deployment.outputs.page_url }}$repo_name/pr-${{ github.event.client_payload.pr_number }}/"
          
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.event.client_payload.artifact_repo }}/issues/${{ github.event.client_payload.pr_number }}/comments \
            -d "{\"body\":\"üöÄ Preview dispon√≠vel: $preview_url\"}"